<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <security:http auto-config="true" use-expressions="true">


        <security:intercept-url pattern="/loginpage.jsp*" access="isAnonymous()"/>

        <security:intercept-url pattern="/loginpage.jsp*" access="permitAll"/>
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>

        <security:form-login
                login-page="/loginpage.jsp"
                default-target-url="/showAllUsers"
                always-use-default-target="true"
                authentication-failure-url="/login?error"
                username-parameter="login"
                password-parameter="password"/>

        <security:logout invalidate-session="true" logout-success-url="/login?logout"/>
        <!-- enable csrf protection -->
        <security:csrf/>

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="">
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=
                                                "SELECT login,password FROM users WHERE login=?"
                                        authorities-by-username-query=
                                                "SELECT login, role FROM user_roles WHERE login =?"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>